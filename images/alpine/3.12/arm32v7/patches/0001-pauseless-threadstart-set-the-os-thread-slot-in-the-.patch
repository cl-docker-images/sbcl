From e439db0ea8ef0ad584841e547e91817fcc481dae Mon Sep 17 00:00:00 2001
From: Eric Timmons <etimmons@mit.edu>
Date: Tue, 1 Sep 2020 20:52:23 -0400
Subject: [PATCH] pauseless-threadstart: set the os-thread slot in the
 Lisp-side trampoline

POSIX provides no guarantee that pthread_create will write the new thread to
its first argument before the new thread starts executing. To ensure the
SB-THREAD:THREAD remains consistent for further calls into pthread from the new
thread itself, set the os-thread slot in the Lisp side trampoline before
starting to RUN the thread.
---
 src/code/target-thread.lisp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/code/target-thread.lisp b/src/code/target-thread.lisp
index ca934c31d..72dd15139 100644
--- a/src/code/target-thread.lisp
+++ b/src/code/target-thread.lisp
@@ -1929,7 +1929,12 @@ (defun start-thread (thread function arguments)
               ;; restored here and not in RUN.
               #+(or win32 darwin freebsd)
               (setf (sb-vm:floating-point-modes)
-                    (svref (thread-startup-info *current-thread*) 5)))
+                    (svref (thread-startup-info *current-thread*) 5))
+              ;; There is no guarantee that pthread_create has set the OS-THREAD
+              ;; slot of the SB-THREAD:THREAD before we get here. So set it here
+              ;; as well.
+              (setf (thread-os-thread new-thread)
+                    (sap-int (sb-vm::current-thread-offset-sap sb-vm::thread-os-thread-slot))))
             (run)))
          (saved-sigmask (make-array (* sb-unix::sizeof-sigset_t sb-vm:n-byte-bits)
                                     :element-type 'bit :initial-element 0))
-- 
2.28.0

