os: linux
dist: focal
language: minimal

env:
  global:
    DOCKER_BUILDKIT: "1"
    DOCKER_CLI_EXPERIMENTAL: "enabled"
    IMAGE_NAME: sbcl
    IMAGE_NAMESPACE: mitmers
    VERSION: "2.0.9"

stages:
  - name: build
  # - name: deploy
  #   if: branch = master

services:
  - docker

before_script:
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - sudo service docker restart
  - docker info
  - |
    if [ "$TRAVIS_BRANCH" = "master" ]; then
      TAG_SUFFIX="-tmp-master"
    else
      TAG_SUFFIX="-tmp"
    fi
    export TAG_SUFFIX

_nonnightly: &nonnightly
  if: (NOT (type = cron) AND NOT (branch =~ ^nightly-.*$))

_nightly: &nightly
  allow_failures:
    if: NOT (type = cron)
  before_script:
    - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
    - sudo service docker restart
    - docker info
    - |
      if [ "$TRAVIS_BRANCH" = "master"]; then
        TAG_SUFFIX="-tmp-master"
      else
        TAG_SUFFIX="-tmp"
      fi
      export TAG_SUFFIX
    - mkdir tmp
    - cd tmp
    - git clone https://github.com/sbcl/sbcl.git
    - cd sbcl
    - export IMAGE_BUILDARGS="--build-arg ref=$(git rev-parse HEAD)"
    - cd ../..
    - rm -rf tmp

_nonfancy_job: &nonfancy_job
  stage: build
  script:
    # Pull the previous images
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-tmp"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-tmp-master"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build-tmp"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build-tmp-master"
      || true
    # Build the stock image
    - >-
      docker build
      --platform "$DOCKER_PLATFORM"
      --pull
      -t "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION$TAG_SUFFIX"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-tmp"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-tmp-master"
      --build-arg BUILDKIT_INLINE_CACHE=1
      $IMAGE_BUILDARGS
      "$VERSION/$OS_NAME/$OS_VERSION/$SIMPLE_ARCH"
    # Tag this image as the build image refers to it by its non-arch specific
    # name
    - >-
      docker tag
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION$TAG_SUFFIX"
      "$IMAGE_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION"
    # Build the build variant of the image
    - >-
      docker build
      --platform "$DOCKER_PLATFORM"
      -t "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build$TAG_SUFFIX"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build-tmp"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build-tmp-master"
      --build-arg BUILDKIT_INLINE_CACHE=1
      $IMAGE_BUILDARGS
      -f "$VERSION/$OS_NAME/$OS_VERSION/$SIMPLE_ARCH/Dockerfile.build"
      "$VERSION/$OS_NAME/$OS_VERSION/$SIMPLE_ARCH"
  after_success: |
    if [ -n "$DOCKER_PASSWORD" ]; then
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      docker push "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION$TAG_SUFFIX"
      docker push "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-build$TAG_SUFFIX"
    fi

_fancy_job: &fancy_job
  stage: build
  script:
    # Pull the previous images
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy-tmp"
      || true
    - >-
      docker pull
      --platform "$DOCKER_PLATFORM"
      "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy-tmp-master"
      || true
    # Build the fancy image
    - >-
      docker build
      --platform "$DOCKER_PLATFORM"
      --pull
      -t "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy$TAG_SUFFIX"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy-tmp"
      --cache-from "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy-tmp-master"
      --build-arg BUILDKIT_INLINE_CACHE=1
      $IMAGE_BUILDARGS
      -f "$VERSION/$OS_NAME/$OS_VERSION/$SIMPLE_ARCH/Dockerfile.fancy"
      "$VERSION/$OS_NAME/$OS_VERSION/$SIMPLE_ARCH"
  after_success: |
    if [ -n "$DOCKER_PASSWORD" ]; then
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      docker push "$IMAGE_ARCH_NAMESPACE/$IMAGE_NAME:$VERSION-$OS_NAME$OS_VERSION_SEP$OS_VERSION-fancy$TAG_SUFFIX"
    fi

jobs:
  include:
    # Regular images
    # Alpine 3.12
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
      <<: [*nonfancy_job, *nonnightly]
    # Alpine 3.11
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
      <<: [*nonfancy_job, *nonnightly]
    # Debian Buster
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*nonfancy_job, *nonnightly]
    # Debian Stretch
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        - sudo apt-get upgrade -y
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*nonfancy_job, *nonnightly]
    # Ubuntu Focal
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*nonfancy_job, *nonnightly]
    # Ubuntu Bionic
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*nonfancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*nonfancy_job, *nonnightly]

    # Fancy images
    # Alpine 3.12
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
      <<: [*fancy_job, *nonnightly]
    # Alpine 3.11
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
      <<: [*fancy_job, *nonnightly]
    # Debian Buster
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*fancy_job, *nonnightly]
    # Debian Stretch
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        - sudo apt-get upgrade -y
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*fancy_job, *nonnightly]
    # Ubuntu Focal
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*fancy_job, *nonnightly]
    # Ubuntu Bionic
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
      <<: [*fancy_job, *nonnightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
      <<: [*fancy_job, *nonnightly]

    # Nightly jobs
    # Alpine 3.12
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    # Alpine 3.11
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    # Debian Buster
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    # Debian Stretch
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        - sudo apt-get upgrade -y
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    # Ubuntu Focal
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    # Ubuntu Bionic
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*nonfancy_job, *nightly]

    # Fancy images
    # Alpine 3.12
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: alpine
        OS_VERSION: "3.12"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    # Alpine 3.11
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: alpine
        OS_VERSION: "3.11"
        OS_VERSION_SEP: ""
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    # Debian Buster
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: debian
        OS_VERSION: "buster"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    # Debian Stretch
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        - sudo apt-get upgrade -y
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: debian
        OS_VERSION: "stretch"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    # Ubuntu Focal
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      before_install:
        - unset DOCKER_BUILDKIT
        - sudo apt-get remove -y docker docker.io containerd runc
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_LATEST: "yes"
        OS_NAME: ubuntu
        OS_VERSION: "focal"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    # Ubuntu Bionic
    - arch: amd64
      env:
        DOCKER_PLATFORM: linux/amd64
        IMAGE_ARCH_NAMESPACE: mitmersamd64
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: amd64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm64/v8
        IMAGE_ARCH_NAMESPACE: mitmersarm64v8
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm64
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    - arch: arm64
      env:
        DOCKER_PLATFORM: linux/arm/v7
        IMAGE_ARCH_NAMESPACE: mitmersarm32v7
        OS_NAME: ubuntu
        OS_VERSION: "bionic"
        OS_VERSION_SEP: "-"
        SIMPLE_ARCH: arm32v7
        VERSION: nightly
      <<: [*fancy_job, *nightly]
    # - arch: amd64
    #   stage: deploy
    #   env:
    #     VERSION: nightly
    #   script:
    #     - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    #     - |
    #       create_manifest_for_all_linux_archs () {
    #         docker manifest create "$IMAGE_NAMESPACE/sbcl:$1" mitmersamd64/sbcl:$1 mitmersarm64v8/sbcl:$1 mitmersarm32v7/sbcl:$1
    #         docker manifest push -p "$IMAGE_NAMESPACE/sbcl:$1"
    #       }
    #     - |
    #       for variant in "" -fancy -build; do
    #         # Alpine
    #         for os_version in 3.12 3.11; do
    #           create_manifest_for_all_linux_archs $VERSION-alpine$os_version$variant
    #         done
    #         create_manifest_for_all_linux_archs $VERSION-alpine$variant
    #         # Debian
    #         for os_version in buster stretch; do
    #           create_manifest_for_all_linux_archs $VERSION-debian-$os_version$variant
    #         done
    #         create_manifest_for_all_linux_archs $VERSION-debian$variant
    #         # Ubuntu
    #         for os_version in focal bionic; do
    #           create_manifest_for_all_linux_archs $VERSION-ubuntu-$os_version$variant
    #         done
    #         create_manifest_for_all_linux_archs $VERSION-ubuntu$variant
    #       done
